name: Transfer images to Docker Hub

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_image_pytorch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image for ingress
        id: push_ingress
        uses: docker/build-push-action@v2
        with:
          file: ingress/Dockerfile
          push: true
          tags: oblivion208/ingress:latest
          
      - name: Build and push image for filter
        id: push_filter
        uses: docker/build-push-action@v2
        with:
          file: filter/Dockerfile
          push: true
          tags: oblivion208/filter:latest
          
      - name: Build and push image for adapter
        id: push_adapter
        uses: docker/build-push-action@v2
        with:
          file: adapter/Dockerfile
          push: true
          tags: oblivion208/adapter:latest
          
      - name: Build and push image for jobrunner
        id: push_jobrunner
        uses: docker/build-push-action@v2
        with:
          file: jobrunner/Dockerfile
          push: true
          tags: oblivion208/jobrunner:latest
          
      - name: Build and push image for apiserver_receive_adapter
        id: push_apiserver_receive_adapter
        uses: docker/build-push-action@v2
        with:
          file: apiserver_receive_adapter/Dockerfile
          push: true
          tags: oblivion208/apiserver_receive_adapter:latest

      - name: Image digest
        run: echo ${{ steps.push_ingress.outputs.digest }}
